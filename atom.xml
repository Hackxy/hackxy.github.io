<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[MechCn]]></title>
  <subtitle><![CDATA[机械中文之家]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://mechcn.com/"/>
  <updated>2015-05-30T17:15:37.338Z</updated>
  <id>http://mechcn.com/</id>
  
  <author>
    <name><![CDATA[Hackxy]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[PTC Creo AFX介绍]]></title>
    <link href="http://mechcn.com/2015/05/30/PTC-Creo-Advanced-Framework/"/>
    <id>http://mechcn.com/2015/05/30/PTC-Creo-Advanced-Framework/</id>
    <published>2015-05-30T02:10:16.000Z</published>
    <updated>2015-05-30T17:15:37.338Z</updated>
    <content type="html"><![CDATA[<h1 id="AFX介绍">AFX介绍</h1><p>Creo Advanced Framework Extension 以创记录的速度从设计到加工。<br>Creo Advanced Framework Extension (AFX) 提供为特定框架设计任务量身定制的强大、易于使用的功能，可让工程师和设计师更快速地创建结构框架。</p>
<p>作为 Creo产品系列的一个完整部分，Creo AFX 为设计师和工程师提供了一种方式，可帮助他们极大地提高定义结构框架装配的精确性和效率。因为此模块是 Creo 自带的，所以您可以在项目的所有阶段（设计、细化、分析、制造和最终装配）中快速轻松地共享该智能 3D 模型。现在您可以更快地定义框架结构，并且如期或提早交付即使是最紧迫的项目。您可以将Creo AFX 添加到设计工具的高速缓存中，与 2D CAD 和传统的 3D CAD 实体建模方法相比，这样做可显著缩短创建精确结构、框架或装配线的时间。<br><a id="more"></a></p>
<h1 id="主要优点">主要优点</h1><h2 id="统一完整的设计环境">统一完整的设计环境</h2><ul>
<li>完全关联的建模确保设计变更在整个设计过程中得到反映</li>
<li>单一的数字化定义将所有制造信息组合在一起，从而消除了额外文件的管理</li>
<li>消除了不同软件应用程序之间非常费时的数据转换</li>
</ul>
<h2 id="简单">简单</h2><ul>
<li>易学易用</li>
<li>提供许多自动化功能，从而显著缩短了设计时间</li>
<li>100% 的参数定义可加速各种框架剖面的设计</li>
</ul>
<h2 id="功能强大">功能强大</h2><ul>
<li>快速定义几乎所有截面之间的拐角接头和节点</li>
<li>消除因装配问题或返工而引起的代价不菲的变更</li>
<li>全关联的定义能立即适应任何设计变更 — 不管有多困难</li>
<li>与 Creo Simulate 无缝集成，以便执行结构分析</li>
<li>通过 <em>.SDNF 和 </em>.DSTV 与其他分析系统连接</li>
<li>利用交互式用户界面轻松放置螺钉和定位销</li>
</ul>
<h2 id="方便">方便</h2><ul>
<li>种类齐全的剖面、连接和接头库可加快框架的创建</li>
<li>种类齐全的楼梯、阶梯和安全罐笼可加快出入口和走道的设计</li>
<li>可从众多的钢和铝制品轮廓、角、端板、螺钉以及更多零件中进行选取</li>
<li>创建一个包含您自己独特组件的库</li>
</ul>
<h2 id="高效">高效</h2><ul>
<li>优化的用户界面反映结构框架的设计过程</li>
<li>通过使用合适的连接、接头和装配方法减少废料</li>
<li>按“实际制造”的模样精确地表示结构框架，从而节省材料成本</li>
<li>将制造和生产数据合并到框架定义中以加速装配</li>
<li>精确的 3D 结构框架定义可在构建结构之前发现设计和生产问题，从而确保装配件的制造一次到位</li>
</ul>
<h1 id="功能和规范">功能和规范</h1><h2 id="支持自顶向下设计过程">支持自顶向下设计过程</h2><ul>
<li>从概念设计开始，使用基准曲线或导入的几何来创建框架骨架</li>
<li>从标准的类型和规格库中选取和组装梁</li>
<li>通过选择不同的拐角类型来设计梁间的接头</li>
<li>通过从库中选择托架、端板和螺钉来设计连接器元件</li>
<li>定义制造用焊件</li>
<li>自动创建 BOM 信息和梁绘图</li>
</ul>
<h2 id="用途广泛">用途广泛</h2><ul>
<li>钢</li>
<li>工业机械</li>
<li>起重机和升降机</li>
<li>海上建筑</li>
<li>建筑</li>
</ul>
<h2 id="具有标准铝型材的结构">具有标准铝型材的结构</h2><ul>
<li>装卸机和封装机</li>
<li>传送带系统</li>
<li>装配线</li>
<li>阶梯和升降机</li>
</ul>
<h2 id="含有定制梁的结构">含有定制梁的结构</h2><ul>
<li>门窗</li>
<li>建筑物正面</li>
<li>屋顶</li>
</ul>
<h2 id="设计梁之间的连接">设计梁之间的连接</h2><ul>
<li>快速轻松地装配连接器元件</li>
<li>所有必要的特征和修改都在梁零件内部实现 — 非装配特征</li>
<li>连接单元库，包括端板、角、托架和螺钉</li>
<li>向库中添加公司自己的连接件</li>
</ul>
<h2 id="其他功能">其他功能</h2><ul>
<li>自动创建 BOM，包括坯件表</li>
<li>创建焊件而不管装配体结构为何</li>
<li>自动创建工程图</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[AFX是Creo一个重大功能，掌握后能大大提高设计效率.]]>
    
    </summary>
    
      <category term="AFX" scheme="http://mechcn.com/tags/AFX/"/>
    
      <category term="Creo" scheme="http://mechcn.com/tags/Creo/"/>
    
      <category term="Creo" scheme="http://mechcn.com/categories/Creo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用hexo3.0+和github搭建博客]]></title>
    <link href="http://mechcn.com/2015/04/16/how-to-build-hexo/"/>
    <id>http://mechcn.com/2015/04/16/how-to-build-hexo/</id>
    <published>2015-04-16T02:10:16.000Z</published>
    <updated>2015-05-30T17:16:06.108Z</updated>
    <content type="html"><![CDATA[<h2 id="前沿">前沿</h2><p>HEXO是一个快速、高效的博客框架，利用免费的GitHub项目空间等便可为自己搭建一个完全属于个人的定制化博客。目前网上已经有许多的教程指导如何来安装和使用Hexo，但是在Hexo升级到3.0之后，这些教程或多或少都存在一定的小问题。本文旨在简单地介绍一下我是如何安装Hexo3.0的。</p>
<h2 id="环境准备">环境准备</h2><h3 id="软件的安装">软件的安装</h3><p>安装Hexo前必须首先安装下列应用程序：</p>
<ul>
<li><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a></li>
<li><a href="http://git-scm.com/" target="_blank" rel="external">Git</a><a id="more"></a>
</li>
</ul>
<h3 id="密钥的生成">密钥的生成</h3><p>安装上述2个软件后，打开Git Bash，在该软件中输入：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/<span class="class">.ssh</span> 检查本机的ssh密钥</span><br></pre></td></tr></table></figure></p>
<p>如果提示：No such file or directory 说明你是第一次使用git。</p>
<p>生成新的SSH Key：<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span></span><br><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="keyword">key</span> pair.</span><br><span class="line">Enter file <span class="keyword">in</span> which <span class="keyword">to</span> save the <span class="keyword">key</span> (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后系统会要你输入密码：<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):<span class="variable">&lt;输入加密串&gt;</span></span><br><span class="line">Enter same passphrase again:<span class="variable">&lt;再次输入加密串&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>在回车中会提示你输入一个密码，这个密码会在你提交项目时使用.</p>
<h3 id="设置Git账户信息">设置Git账户信息</h3><p>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user<span class="class">.name</span> <span class="string">"hackxy"</span><span class="comment">//用户名</span></span><br><span class="line">$ git config --global user<span class="class">.email</span>  <span class="string">"hackxy@gmail.com"</span><span class="comment">//填写自己的邮箱</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Github的配置">Github的配置</h3><h4 id="创建page">创建page</h4><ul>
<li>打开<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> ，注册并登录；</li>
<li>创建New repository；</li>
<li>进入代码库创建页面：<br>在Repository name下填写yourname.github.io，Description (optional)下填写一些简单的描述</li>
<li>正确创建之后，点击此库的setting页面，点击Automatic page generator。<h4 id="添加SSH_keys">添加SSH keys</h4>在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。</li>
<li>打开本地C:\Documents and Settings\Administrator.ssh\id_rsa.pub文件。此文件里面内容为刚才生成人密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。</li>
<li>登陆github系统。点击右上角的 Account Settings—-&gt;SSH Public keys —-&gt; add another public keys</li>
<li>把你本地生成的密钥复制到里面（key文本框中）， 点击 add key 就ok了.</li>
<li>测试<br>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh -<span class="constant">T </span>git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>如果是下面的反馈：<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity <span class="keyword">of</span> host <span class="comment">'github.com (207.97.227.239)' can't be established.</span></span><br><span class="line">RSA <span class="keyword">key</span> fingerprint <span class="keyword">is</span> <span class="number">16</span>:<span class="number">27</span>:ac:a5:<span class="number">76</span>:<span class="number">28</span>:<span class="number">2</span>d:<span class="number">36</span>:<span class="number">63</span>:<span class="number">1</span>b:<span class="number">56</span>:<span class="number">4</span>d:eb:df:a6:<span class="number">48.</span></span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)?</span><br></pre></td></tr></table></figure></p>
<p>不要紧张，输入yes就好，然后会看到：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi hackxy! You've successfully authenticated, <span class="keyword">but</span> GitHub <span class="keyword">does</span> <span class="keyword">not</span> provide shell access.</span><br></pre></td></tr></table></figure></p>
<h2 id="安装Hexo">安装Hexo</h2><p>在自己认为合适的地方创建一个文件夹，然后在文件夹空白处按住Shift+鼠标右键，然后点击在此处打开Git Bash。（同样要记住啦，下文中会使用在当前目录打开命令行来代指上述的操作）<br>在命令行中输入：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -<span class="keyword">g</span></span><br></pre></td></tr></table></figure></p>
<p>可能你会看到一个WARN，但是不用担心，这不会影响你的正常使用。<br>然后输入<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure></p>
<p>然后你会看到命令行窗口刷了一大堆白字，下面我们来看一看Hexo是不是已经安装好了。<br>在命令行中输入：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> -v</span><br></pre></td></tr></table></figure></p>
<p>初始化Hexo:接着上面的操作，输入：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> init</span><br></pre></td></tr></table></figure></p>
<p>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。</p>
<h2 id="首次体验Hexo">首次体验Hexo</h2><p>继续操作，同样是在命令行中，输入：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> g</span><br></pre></td></tr></table></figure></p>
<p>然后输入：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> s</span><br></pre></td></tr></table></figure>
<p>然后会提示：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Hexo is running <span class="keyword">at</span> <span class="keyword">http</span>://<span class="number">0.0</span>.0.0:<span class="number">4000</span>/. Press Ctrl+C <span class="built_in">to</span> <span class="built_in">stop</span>.</span><br><span class="line">在浏览器中打开<span class="keyword">http</span>://localhost:<span class="number">4000</span>/，你将会看到浏览器中一个本地化的博客已经搭建完成。</span><br></pre></td></tr></table></figure></p>
<h2 id="配置Hexo">配置Hexo</h2><ul>
<li>部署到github前，先要配置_config.yml文件，重点说下deployment，这是HEXO3.0之后与以往版本不同的地方，少有错误就会deploy失败。。<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## <span class="string">Docs:</span> <span class="string">http:</span><span class="comment">//hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="string">deploy:</span></span><br><span class="line"><span class="label">  type:</span> git</span><br><span class="line"><span class="label">  repository:</span> git<span class="annotation">@github</span>.<span class="string">com:</span>hackxy/hackxy.github.io.git # 这里是你的github.io的ssh地址</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>安装插件：<br>添加sitemap和feed插件<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-generator-sitemap</span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-feed</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>修改_config.yml，增加以下内容<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Extensions</span></span><br><span class="line"><span class="label">Plugins:</span></span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Feed Atom</span></span><br><span class="line"><span class="label">feed:</span></span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># sitemap</span></span><br><span class="line"><span class="label">sitemap:</span></span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>建立About页面：<br>首先在主目录找到_config.yml，找到url添加about_dir: about到这个板块。然后在/source里面建立about文件夹。在about文件夹里建立index.md。编辑index.md就和发布其他的文章一样，格式都一样。</p>
</li>
<li><p>绑定域名<br>1.在域名服务商那申请域名；<br>2.在source目录下新建一个CANEM文件，内容填写你的域名，例如：www.veolus.tk;<br>3.在域名服务商那绑定域名，选择CNAME的方式，地址为github的博客地址，例如hackxy.github.io;<br>4.过几分钟访问你的域名即可访问你的github博客地址。</p>
</li>
</ul>
<h2 id="部署HEXO">部署HEXO</h2><p>在完成上述配置后（除了Deployment必须配置外，其余皆可暂不配置），必须安装 hexo-deployer-git：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure></p>
<p>依次输入下述三条命令：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo <span class="keyword">g</span></span><br><span class="line">hexo <span class="literal">d</span></span><br></pre></td></tr></table></figure></p>
<p>完成部署。</p>
<h2 id="进阶">进阶</h2><ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">GIT教程</a></li>
<li><a href="http://hexo.io" target="_blank" rel="external">hexo文档</a></li>
</ul>
<h2 id="福利">福利</h2><p><img src="http://www.curvexpo.com/wp-content/uploads/2013/10/AddictionDouceur-Trapeze-Top-and-Legging-300x450.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[本文主要介绍我利用hexo3.0搭建博客的过程.]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://mechcn.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://mechcn.com/categories/Hexo/"/>
    
  </entry>
  
</feed>